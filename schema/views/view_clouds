/*
** List all group resources (clouds) and for each resource (cpu, disk, ephemeral disk(scrtch), ram, and swap) show 
** contol, max, used, foreign, and native values.
*/
create or replace view view_clouds as

select

vcr.*,

case when cores_ctl=-1 then
    case when cores_softmax=-1 then
        cores_max-(cores_native+cores_foreign)
    else
        least(cores_softmax-(cores_native+cores_foreign), cores_max-(cores_native+cores_foreign))
    end
else
    case when cores_softmax=-1 then
        least(cores_ctl-cores_native, cores_max-(cores_native+cores_foreign))
    else
        least(cores_ctl-cores_native, cores_softmax-(cores_native+cores_foreign), cores_max-(cores_native+cores_foreign))
    end
end as cores_idle,


case when ram_ctl=-1 then
    ram_max-(ram_native+ram_foreign)
else
    least(ram_ctl-ram_native, ram_max-(ram_native+ram_foreign))
end as ram_idle

from (
    select

    cc.group_name,
    cc.cloud_name,
    cc.enabled,
    cc.priority as cloud_priority,
    cc.spot_price,
    cc.vm_boot_volume,
    cc.vm_flavor,
    cc.vm_image,
    cc.vm_keep_alive,
    cc.vm_keyname,
    cc.vm_network,
    cc.vm_security_groups,
    cc.userid,
    cc.auth_type,
    cc.app_credentials,
    cc.app_credentials_secret,
    cc.app_credentials_expiry,

    case when ifnull(cc.vm_flavor,'')='' then
        case when ifnull(cg.vm_flavor,'')='' then
            null
        else
            cg.vm_flavor
        end
    else
        cc.vm_flavor
    end as cascading_vm_flavor,

    case when ifnull(cc.vm_image,'')='' then
        case when ifnull(cg.vm_image,'')='' then
            null
        else
            cg.vm_image
        end
    else
        cc.vm_image
    end as cascading_vm_image,

    case when cc.vm_keep_alive=-1 then
        case when cg.vm_keep_alive=-1 then
            0
        else
            cg.vm_keep_alive
        end
    else
        cc.vm_keep_alive
    end as cascading_vm_keep_alive,

    case when ifnull(cc.vm_keyname,'')='' then
        case when ifnull(cg.vm_keyname,'')='' then
            null
        else
            cg.vm_keyname
        end
    else
        cc.vm_keyname
    end as cascading_vm_keyname,

    case when ifnull(cc.vm_network,'')='' then
        case when ifnull(cg.vm_network,'')='' then
            null
        else
            cg.vm_network
        end
    else
        cc.vm_network
    end as cascading_vm_network,

    case when ifnull(cc.vm_security_groups,'')='' then
        case when ifnull(cg.vm_security_groups,'')='' then
            null
        else
            cg.vm_security_groups
        end
    else
        cc.vm_security_groups
    end as cascading_vm_security_groups,

    authurl,
    project_domain_name,
    ifnull(project_domain_id, '') as project_domain_id,
    cc.project,
    user_domain_name,
    ifnull(user_domain_id, '') as user_domain_id,
    username,
    password,
#   keyname,
    cacertificate,
    cc.region,
    cc.cloud_type,
    cc.ec2_owner_id,

    case when cores_ctl<0 then
        -1
    else
        case when cores_softmax<0 then
            least(cores_ctl, ifnull(cores_max,0))
        else
            least(cores_ctl, cores_softmax, ifnull(cores_max,0))
        end
    end as cores_ctl,

    case when cores_softmax<0 then
        -1
    else
        cores_softmax
    end as cores_softmax,

    ifnull(cores_max, 0) as cores_max,
    ifnull(cores_used, 0) as cores_used,
    sum(case when vv.cores is NULL or vv.foreign_vm=0 then 0 else vv.cores end) as cores_foreign,
    sum(case when vv.cores is NULL or vv.foreign_vm=1 then 0 else vv.cores end) as cores_native,

    case when ram_ctl=-1 then
        ram_ctl
    else
        case when ifnull(ram_ctl,0)>ifnull(ram_max,0) then
            ifnull(ram_max,0)
        else
            ifnull(ram_ctl,0)
        end
    end as ram_ctl,
    ifnull(ram_max, 0) as ram_max,
    ifnull(ram_used, 0) as ram_used,
    sum(case when vv.ram is NULL or vv.foreign_vm=0 then 0 else vv.ram end) as ram_foreign,
    sum(case when vv.ram is NULL or vv.foreign_vm=1 then 0 else vv.ram end) as ram_native,

    ifnull(instances_max, 0) as instances_max,
    ifnull(instances_used, 0) as instances_used,

    ifnull(floating_ips_max, 0) as floating_ips_max,
    ifnull(floating_ips_used, 0) as floating_ips_used,

    ifnull(security_groups_max, 0) as security_groups_max,
    ifnull(security_groups_used, 0) as security_groups_used,

    ifnull(server_groups_max, 0) as server_groups_max,
    ifnull(server_groups_used, 0) as server_groups_used,

    ifnull(image_meta_max, 0) as image_meta_max,
    ifnull(keypairs_max, 0) as keypairs_max,
    ifnull(personality_max, 0) as personality_max,
    ifnull(personality_size_max, 0) as personality_size_max,
    ifnull(security_group_rules_max, 0) as security_group_rules_max,
    ifnull(server_group_members_max, 0) as server_group_members_max,
    ifnull(server_meta_max, 0) as server_meta_max

    from csv2_clouds as cc
    left outer join csv2_groups as cg on cc.group_name=cg.group_name
    left outer join cloud_limits as cl on cc.group_name=cl.group_name and cc.cloud_name=cl.cloud_name
    left outer join view_vms as vv on cc.group_name=vv.group_name and cc.cloud_name=vv.cloud_name


    group by cc.group_name,cc.cloud_name
    ) as vcr /* view_clouds_raw */

order by group_name,cloud_name
;
